# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G80w0S226mHc8W7-hkFr7Vrqe5tm5Qan
"""

#boolean
#Case 1
print("Case 1")
#Data bertipe Boolean yang Kita Deklarasikan (Cara Standar)
f = bool(True)
g = bool(False)
print(f)
print(g)
print("================================================")

# Case 2
print("Case 2")
# Boolean values in different contexts
# Automatically tracked by the computer without declaration
print(3 > 2)
print(3 + 2 == 5)
print(3 < 2)
print("=============================================================")

# Case 3
print("Case 3")
Penghasilan = 20000000
penghasilan_tanpa_pajak = 4000000
if penghasilan_tanpa_pajak >= Penghasilan:
    pajak_yang_harus_dibayar = 0
if Penghasilan > penghasilan_tanpa_pajak:
    pajak_yang_harus_dibayar = 0.1 * Penghasilan

print("Pajak yang harus Anda bayar: Rp ", pajak_yang_harus_dibayar)

print("Case 4")
# Semua data yang tidak nol (kosong) memiliki nilai Boolean True

a = 3
b = "Ini data string."
c = "laptop", "buku", "ballpen"  # tuple
d = ["laptop", "buku", "ballpen"]  # list
e = {"Laptop": "asus", "buku": "buku_teks", "ballpen": "arrow"}  # dictionary
f = {1, 2, 3, 4, 5}  # set
print(bool(a))
print(bool(b))
print(bool(c))
print(bool(d))
print(bool(e))
print(bool(f))
print("=============================================================")

# PART 3
# Case 5: Variables that are empty have a Boolean value of False
print("Case 5")

a = 0
b = ""
c = ()
d = []
e = {}

print(bool(a))
print(bool(b))
print(bool(c))
print(bool(d))
print(bool(e))
print("=============================================================")

# Case 6: Variables with a length of zero have a Boolean value of False
print("Case 6")

class MyClass:
    def _len_(self):
        return 0

print(bool(MyClass()))
print("=============================================================")

#latihan boolean
# Membaca input dari pengguna
input_a = input("Masukkan nilai a (True/False): ").lower()
input_b = input("Masukkan nilai b (True/False): ").lower()

# Konversi input menjadi boolean
a = input_a == 'true'
b = input_b == 'true'

# Menampilkan nilai variabel boolean
print("Nilai a:", a)
print("Nilai b:", b)

# Operasi logika AND
c = a and b
print("Hasil dari a AND b:", c)

# Operasi logika OR
d = a or b
print("Hasil dari a OR b:", d)

# Operasi logika NOT
e = not a
print("Hasil dari NOT a:", e)

#sets
#Constructing a Set (there are two methods)
Set_1 = {"Toyota", "Daihatsu", "Honda"}
Set_2 = set((("Toyota", "Daihatsu", "Honda")))

print("Tipe data Set_1 adalah", type(Set_1))
print("Tipe data Set_2 adalah", type(Set_2))
print("Data Set_1: ", Set_1)
print("Data Set_2: ", Set_2)
print("--------------------------------------------")

#Print every item of Set_1
for x in Set_1:
  print(x)
print("--------------------------------------------")

#Check the length of the set
print(len(Set_1))

#Check if a key exist
if "Daihatsu" in Set_1:
  print("Yes, Daihatsu is an item in Set_1.")

#Add an item
Set_1.add("Mitsubishi")
print(Set_1)

#Add multiple items
Set_1.update(["Suzuki", "Mazda", "Nissan"])
print(Set_1)

Set_1.remove("Honda")
print(Set_1)

#Remove an item (method2)
Set_1.discard("Mazda")
print(Set_1)

#Delete (pop) the last inserted key
Set_1.pop()
print(Set_1)

#Clear the set
Set_1.clear()
print(Set_1)

#Delete the  set
del Set_1
print("-----------------------------------------------")

#Union of two sets
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set3 = set1.union(set2)
print(set3)
print("------------------------------------------------")
#Set 1 takes copies of all items of set 2
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set1.update(set2)
print(set1)

#latihan sets
# Membaca elemen-elemen set dari input pengguna
set1_elements = input("Masukkan elemen-elemen set 1 (pisahkan dengan koma): ").split(',')
set2_elements = input("Masukkan elemen-elemen set 2 (pisahkan dengan koma): ").split(',')

# Membuat set dari elemen-elemen yang dimasukkan pengguna
set1 = set(map(int, set1_elements))
set2 = set(map(int, set2_elements))

print("Set 1:", set1)
print("Set 2:", set2)

# Operasi gabungan (union) dari dua set
union_set = set1.union(set2)
print("Gabungan dari dua set:", union_set)

# Operasi irisan (intersection) dari dua set
intersection_set = set1.intersection(set2)
print("Irisan dari dua set:", intersection_set)

# Operasi selisih (difference) antara set1 dan set2
difference_set = set1.difference(set2)
print("Selisih set1 dan set2:", difference_set)

# Operasi selisih simetris (symmetric difference) antara dua set
symmetric_difference_set = set1.symmetric_difference(set2)
print("Selisih simetris dari dua set:", symmetric_difference_set)

# Menambahkan elemen ke dalam set1
elem_to_add = int(input("Masukkan elemen yang ingin ditambahkan ke dalam set 1: "))
set1.add(elem_to_add)
print("Set 1 setelah menambahkan elemen", elem_to_add, ":", set1)

# Menghapus elemen dari set2
elem_to_remove = int(input("Masukkan elemen yang ingin dihapus dari set 2: "))
set2.discard(elem_to_remove)
print("Set 2 setelah menghapus elemen", elem_to_remove, ":", set2)